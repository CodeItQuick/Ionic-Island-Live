{"version":3,"sources":["webpack:///./src/app/pages/sub-items/sub-items.html","webpack:///./src/app/pages/sub-items/sub-items.module.ts","webpack:///./src/app/pages/sub-items/sub-items.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,iPAAiP,OAAO,oZAAoZ,YAAY,gK;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvlB;AAClB;AACF;AACA;AACE;AAEC;AAiBhD;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAf9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC;oBACpB;wBACE,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,4DAAY;qBACxB;iBACF,CAAC;aACH;YACD,YAAY,EAAE,CAAC,4DAAY,CAAC;YAC5B,OAAO,EAAE,CAAC,oEAAsB,CAAC;SAClC,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBW;AACK;AACU;AAI+B;AACI;AACM;AACR;AAU1F;IAOI,kBAAkB;IAClB,sBAAmB,OAAsB,EAC7B,yBAAoD,EACpD,0BAAsD,EACtD,6BAA4D,EAC5D,0BAAsD,EACtD,KAAqB,EACrB,MAAc;QANP,YAAO,GAAP,OAAO,CAAe;QAC7B,8BAAyB,GAAzB,yBAAyB,CAA2B;QACpD,+BAA0B,GAA1B,0BAA0B,CAA4B;QACtD,kCAA6B,GAA7B,6BAA6B,CAA+B;QAC5D,+BAA0B,GAA1B,0BAA0B,CAA4B;QACtD,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QAX1B,UAAK,GAAQ,EAAE,CAAC;QAChB,iBAAY,GAAiC,EAAE,CAAC;QAW5C,IAAI,CAAC,YAAY,GAAG;YAChB,YAAY,EAAE,IAAI,CAAC,yBAAyB;YAC5C,aAAa,EAAE,IAAI,CAAC,0BAA0B;YAC9C,gBAAgB,EAAE,IAAI,CAAC,6BAA6B;YACpD,aAAa,EAAE,IAAI,CAAC,0BAA0B;SACjD,CAAC;QAEF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC9D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAErD,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;YACzC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;SACxC;IACL,CAAC;IAED,+BAAQ,GAAR,UAAS,IAAS;QACd,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;IACjD,CAAC;IAjCQ,YAAY;QARxB,+DAAS,CAAC;YACP,iGAA6B;YAC7B,SAAS,EAAE;gBACP,gGAAyB;gBACzB,oGAA0B;gBAC1B,0GAA6B;gBAC7B,kGAA0B;aAAC;SAClC,CAAC;yCAS8B,4DAAa;YACF,gGAAyB;YACxB,oGAA0B;YACvB,0GAA6B;YAChC,kGAA0B;YAC/C,8DAAc;YACb,sDAAM;OAdjB,YAAY,CAkCxB;IAAD,mBAAC;CAAA;AAlCwB","file":"pages-sub-items-sub-items-module.js","sourcesContent":["module.exports = \"<!-- Back button with custom text and icon -->\\r\\n<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>{{title}}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<!-- Content -->\\r\\n<ion-content>\\r\\n  <ion-grid no-padding>\\r\\n    <ion-row no-padding>\\r\\n      <ion-col size=\\\"12\\\" no-padding>\\r\\n        <ion-list *ngIf=\\\"pages.length\\\" lines=\\\"none\\\">\\r\\n          <ion-item lines=\\\"none\\\"  *ngFor=\\\"let item of pages\\\" (click)=\\\"openPage(item)\\\">\\r\\n            <ion-label>\\r\\n              <div text-size-xs>{{item.title}}</div>\\r\\n            </ion-label>\\r\\n          </ion-item>\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\"","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { SubItemsPage } from './sub-items.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: SubItemsPage\r\n      }\r\n    ])\r\n  ],\r\n  declarations: [SubItemsPage],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class SubItemsPageModule { }\r\n","import { Component } from '@angular/core';\r\nimport { NavController } from '@ionic/angular';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { IService } from '../../services/IService';\r\n\r\nimport { ListViewExpandableService } from '../../services/list-view-expandable-service';\r\nimport { ListViewDragAndDropService } from '../../services/list-view-drag-and-drop-service';\r\nimport { ListViewSwipeToDismissService } from '../../services/list-view-swipe-to-dismiss-service';\r\nimport { ListViewGoogleCardsService } from '../../services/list-view-google-card-service';\r\n\r\n@Component({\r\n    templateUrl: 'sub-items.html',\r\n    providers: [\r\n        ListViewExpandableService,\r\n        ListViewDragAndDropService,\r\n        ListViewSwipeToDismissService,\r\n        ListViewGoogleCardsService]\r\n})\r\nexport class SubItemsPage {\r\n    title: string;\r\n    componentName: string;\r\n    pages: any = {};\r\n    listServices: { [key: string]: IService; } = {};\r\n    service: IService;\r\n\r\n    // services: array\r\n    constructor(public navCtrl: NavController,\r\n        private listViewExpandableService: ListViewExpandableService,\r\n        private listViewDragAndDropService: ListViewDragAndDropService,\r\n        private listViewSwipeToDismissService: ListViewSwipeToDismissService,\r\n        private listViewGoogleCardsService: ListViewGoogleCardsService,\r\n        private route: ActivatedRoute,\r\n        private router: Router) {\r\n        this.listServices = {\r\n            'expandable': this.listViewExpandableService,\r\n            'dragAndDrop': this.listViewDragAndDropService,\r\n            'swipeToDismiss': this.listViewSwipeToDismissService,\r\n            'googleCards': this.listViewGoogleCardsService\r\n        };\r\n\r\n        this.componentName = this.route.snapshot.paramMap.get('type');\r\n        this.service = this.listServices[this.componentName];\r\n\r\n        if (this.service) {\r\n            this.pages = this.service.getAllThemes();\r\n            this.title = this.service.getTitle();\r\n        }\r\n    }\r\n\r\n    openPage(page: any) {\r\n        this.navCtrl.navigateForward([page.url], {});\r\n    }\r\n}\r\n"],"sourceRoot":""}